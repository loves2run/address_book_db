<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css">

    <title>Address Book</title>
</head>
<body>
    <header>
        <h1>Brandon's Address Book</h1>
        <a href="/api/new-address" class="btn">Add New Address</a>
    </header>
    <main>
        <div class="card-container">
            <% addresses.forEach(address => { %>
                <div class="card">
                    <h2><%= address.firstName %> <%= address.lastName %></h2>
                    <p><strong>Phone:</strong> <%= address.phone %></p>
                    <p><strong>Email:</strong> <%= address.email %></p>
                    <p><strong>Address:</strong> <%= address.streetAddress %></p>
                    <p><%= address.city %>, <%= address.state %> <%= address.zipCode %></p>
                    <p><strong>Categories:</strong> <%= address.category %></p>
                    <div class="card-actions">
                        <a href="/api/edit/<%= address._id %>" class="btn-edit">Edit</a><br>
                        <button 
                            class="btn-delete"
                            type="button"
                            data-id="<%= address._id %>"
                            data-name="<%= address.firstName %> <%= address.lastName %>"
                            data-address="<%= address.streetAddress %>, <%= address.city %> <%= address.zipCode %>"
                        >
                            Delete
                        </button>
                </div>
            <% }) %>
        </div>

        <!-- Modal for delete confirmation box -->
        <div id="deleteModal" class="modal">
            <div class="modalContent">
                <h2>Delete Address</h2>
                <p id="modalText">Are you sure you want to delete this address?</p>
                <p id="modalName"></p>
                <p id="modalAddress"></p>
                <button type="button" id="confirmDeleteBtn" data-id="">Confirm</button>
                <button type="button" id="cancelDelete">Cancel</button>
            </div>
        </div>

        <!-- Modal to confirm successful deletion -->
        <div id="deleteSuccessModal" class="modal">
            <div class="modalContent">
                <h2>Address Successfully Deleted!</h2>
            </div>
        </div>


        <div id="editSuccessModal" class="modal">
            <div class="modalContent">
                <span class="close">&times;</span>
                <h2>Success!</h2>
                <p>Address has been updated successfully.</p>
            </div>
        </div>


        //modal to display on successful new address submission
        <div id="addSuccessModal" class="modal">
            <div class="modalContent">
                <span class="close">&times;</span>
                <h2>Success!</h2>
                <p>Address has been successfully added.</p>
            </div>
        </div>
    </main>
    <footer>
        <p>&copy; 2024 My Address Book</p>
    </footer>

    

    <script>
/*********************  
 * For deletion logic
 * ******************************/
        //get modal elements
        const deleteModal = document.getElementById('deleteModal');
        const modalText = document.getElementById('modalText');
        const modalName = document.getElementById('modalName');
        const modalAddress = document.getElementById('modalAddress');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const cancelDelete = document.getElementById('cancelDelete');
        const deleteSuccessModal = document.getElementById('deleteSuccessModal');

        console.log(confirmDeleteBtn);

        //add click event listeners to all delete buttons
        document.querySelectorAll('.btn-delete').forEach((button) => {
            button.addEventListener('click', () => {
                console.log('Button clicked:', button);
                console.log('Button dataset:', button.dataset);

                const id = button.dataset.id;
                const name = button.dataset.name;
                const address = button.dataset.address;

                //update deletemodal content
               modalName.textContent = name;
               modalAddress.textContent = address;
               confirmDeleteBtn.setAttribute('data-id', id);

               //show modal
               deleteModal.classList.add('show');

            });
        });

        //handle confirm delete
        confirmDeleteBtn.addEventListener('click', async () => {
            const id = confirmDeleteBtn.getAttribute('data-id');

            try {
                const response = await fetch(`/api/delete/${id}`, {
                    method: 'DELETE'
                });

                console.log('Response status:', response.status);

                if (response.ok) {
                    //show deleteSuccessModal
                    deleteSuccessModal.classList.add('show');


                    //reload page or remove element from DOM
                   setTimeout(()=> {
                    window.location.reload();
                   }, 2000);
                } else {
                    const errorData = await response.text();
                    alert('Error deleting address. Please try again.');
                }
            } catch (error) {
                console.error('Error deleting address. Please try again.');
            }
            deleteModal.classList.add('show');
        });

        //handle cancel button
        cancelDelete.addEventListener('click', () => {
            console.log('Cancel button clicked');
            deleteModal.classList.remove('show');
        })

        //close modal if clicking outside
        window.addEventListener('click', (event) => {
            if (event.target === deleteModal) {
                console.log('Window clicked', event.target);
                deleteModal.classList.remove('show');
            }
        });


/***************************
 * For added edit success modal  new address added success modal
 * *************************/
        // Check for success parameter in URL
        window.onload = function() {
                    const urlParams = new URLSearchParams(window.location.search);
                    //check for success flag on edit
                    if (urlParams.get('success') === 'true') {
                        showEditModal();
                    }

                    //check for added flag when new address is added
                    if (urlParams.get('added') === 'true') {
                        showAddModal();
                    }
                }

                function showEditModal() {
                    const modal = document.getElementById('editSuccessModal');
                    modal.classList.add('show');


                    // Remove success parameter from URL without refreshing
                    const url = new URL(window.location);
                    url.searchParams.delete('success');
                    window.history.replaceState({}, '', url);

                    // Close modal when clicking X
                    const closeBtn = modal.querySelector('.close');
                    closeBtn.onclick = function() {
                        modal.classList.remove('show');
                    }

                    // Close modal when clicking outside
                    window.onclick = function(event) {
                        if (event.target === modal) {
                            modal.classList.remove('show');
                        }
                    }

                    // Auto-close after 3 seconds
                    setTimeout(() => {
                        modal.classList.remove('show');
                    }, 3000);
                }

                function showAddModal() {
                    const modal = document.getElementById('addSuccessModal');
                    modal.classList.add('show');

                    //remove added parameter from URL without refreshing
                    const url = new URL(window.location);
                    url.searchParams.delete('added');
                    window.history.replaceState({}, '', url);

                      // Close modal when clicking X
                      const closeBtn = modal.querySelector('.close');
                    closeBtn.onclick = function() {
                        modal.classList.remove('show');
                    }

                    // Close modal when clicking outside
                    window.onclick = function(event) {
                        if (event.target === modal) {
                            modal.classList.remove('show');
                        }
                    }

                    // Auto-close after 2 seconds
                    setTimeout(() => {
                        modal.classList.remove('show');
                    }, 2000);
                }
    </script>

<style>
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modalContent {
        background-color: white;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        border-radius: 5px;
        width: 80%;
        max-width: 500px;
    }

    #confirmDeleteBtn {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 8px 16px;
        margin-right: 10px;
        cursor: pointer;
    }

    #cancelDelete {
        background-color: #6c757d;
        color: white;
        border: none;
        padding: 8px 16px;
        cursor: pointer;
    }

    .close {
        position: absolute;
        right: 10px;
        top: 10px;
        font-size: 24px;
        cursor: pointer;
    }

    .show {
        display: block;
    }

</style>
</body>
</html>