<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/styles.css">

    <title>Edit-Address</title>
</head>
<body>
    <h1>Edit Address</h1>

    <% if (typeof error !== 'undefined') { %>
        <div class="error"><%= error %></div>
    <% } %>

    <div class="form-container">
        <form id="editAddressForm" action="<%= action %>" method="POST">
            <%- include('partials/form-fields.ejs') %>
            <div class="form-actions">
                <button class="btn" type="submit">Update</button>
                <button class="btn" type="button" id="cancelEditBtn">Cancel</button>
            </div>
        </form>
    </div>

    <!-- Modal for delete confirmation box -->
    <div id="cancelEditModal" class="modal">
        <div class="modalContent">
            <h2>Warning! You have unsaved changes. </h2>
            <p id="modalText">Would you like to discard changes? Click cancel to continue editing. </p>
            <button type="button" class="btn" id="confirmCancelBtn" data-id="">Confirm</button>
            <button type="button" class="btn" id="continueEditBtn">Cancel</button>
        </div>
    </div>
    
    <script>  

        document.addEventListener('DOMContentLoaded', () => {
            //get all necessary elements
            const cancelEditBtn = document.getElementById('cancelEditBtn');
            const cancelEditModal = document.getElementById('cancelEditModal');
            const confirmCancelBtn = document.getElementById('confirmCancelBtn');
            const continueEditBtn = document.getElementById('continueEditBtn');
            const initialFormData = <%- JSON.stringify(formData) %>;


            //handle cancel edit button click
            cancelEditBtn.addEventListener('click', () => {
                const formFields = document.querySelectorAll('form input, form select, form textArea');
                const currentFormData = {};

                formFields.forEach(field => {
                    if (field.type === 'checkbox' || field.type === 'radio') {
                        currentFormData[field.name] = field.checked;
                    } else {
                        currentFormData[field.name] = field.value;
                    }
                });

                const normalize = value => Array.isArray(value) ? value.join(',') : value || '';
                let hasChanges = false;

                Object.keys(initialFormData).forEach(key => {
                    if (key === '_id' || key === '__v') return;
                    const initialValue = normalize(initialFormData[key]);
                    const currentValue = normalize(currentFormData[key]);

                    if (initialValue !== currentValue) {
                        hasChanges = true;
                        console.log(`Change detected: ${key} | Initial: ${initialValue} | Current: ${currentValue}`);
                    }
                });

                if (hasChanges) {
                    cancelEditModal.style.display = 'block';
                } else {
                    window.location.href = '/api/';
                }
            });

            //handle continue editing (modal close)
            continueEditBtn.addEventListener('click', () => {
                cancelEditModal.style.display = 'none';
            });

            //handle confirm cancel
            confirmCancelBtn.addEventListener('click', () => {
                window.location.href = '/api/';
            });
        });

    </script>
</body>
</html>

